<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
							http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
							http://www.springframework.org/schema/tx
							http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
							http://www.springframework.org/schema/context
            	http://www.springframework.org/schema/context/spring-context-2.5.xsd">
							
	<!-- Enable @Autowire annotation -->
	<context:component-scan base-package="com.fronde.harrisd.twitter.controller" />

	<!-- Security Settings -->
	<import resource="security-config.xml" />
	

	<!-- Data settings -->
	<bean id="dao" class="com.fronde.harrisd.twitter.persistence.HibernateDAO">
		<property name="sessionFactory"><ref local="sessionFactory"/></property>
	</bean>
	
	<!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
  <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
  	<property name="sessionFactory"><ref local="sessionFactory"/></property>
  </bean>
  

	<!-- A Hibernate SessionFactory for mapping objects to relation tables -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingLocations">
			<list>
				<value>classpath:com/fronde/harrisd/twitter/persistence/orm-mapping/User.hbm.xml</value>
				<value>classpath:com/fronde/harrisd/twitter/persistence/orm-mapping/Post.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
			</props>
		</property>
	</bean>

	<!-- The actual database to connect to (using built-in pooling and no JIDI lookup) -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/twitter" />
		<property name="username" value="twitter" />
		<property name="password" value="twitter" />
	</bean>

	<!-- Translates Hibernate exceptions to Spring Data Access Exceptions -->
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />


	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- The maximum file size in bytes -->
		<property name="maxUploadSize" value="100000" />
	</bean>

</beans>